{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-jboss",
            "description": "Application template for JDG 6.5 applications.",
            "tags": "datagrid,jboss,xpaas",
            "version": "1.2.0"
        },
        "name": "datagrid65-basic"
    },
    "labels": {
        "template": "datagrid65-basic",
        "xpaas": "1.2.0"
    },
    "parameters": [
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "datagrid-app",
            "required": true
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTP",
            "value": "",
            "required": false
        },
        {
            "description": "Git source URI for application",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/knrc/openshift-examples.git",
            "required": true
        },
        {
            "description": "Git branch/tag reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "jdg-configuration",
            "required": false
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "name": "CONTEXT_DIR",
            "value": "jdg-configuration",
            "required": false
        },
        {
            "description": "User name for JDG user.",
            "name": "USERNAME",
            "value": "",
            "required": false
        },
        {
            "description": "Password for JDG user.",
            "name": "PASSWORD",
            "value": "",
            "required": false
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "Comma-separated list of connector types that should be configured (defaults to 'memcached,hotrod,rest')",
            "name": "INFINISPAN_CONNECTORS",
            "value": "hotrod,memcached,rest",
            "required": false
        },
        {
            "description": "Comma-separated list of caches to configure.  By default, a distributed-cache, with a mode of SYNC will be configured for each entry.",
            "name": "CACHE_NAMES",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
            "value": "",
            "required": false
        },
        {
            "description": "The name of the cache to expose through this memcached connector (defaults to 'default')",
            "name": "MEMCACHED_CACHE",
            "value": "default",
            "required": false
        },
        {
            "description": "The domain, declared in the security subsystem, that should be used to authenticate access to the REST endpoint",
            "name": "REST_SECURITY_DOMAIN",
            "value": "",
            "required": false
        },
        {
            "description": "JGroups cluster password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's HTTP port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 11211,
                        "targetPort": 11211
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-memcached",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Memcached service for clustered applications."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 11333,
                        "targetPort": 11333
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-hotrod",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Hot Rod service for clustered applications."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's HTTP service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "jboss-datagrid65-openshift:1.2"
                        }
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/livenessProbe.sh"
                                        ]
                                    }
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "memcached",
                                        "containerPort": 11211,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "hotrod",
                                        "containerPort": 11222,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "USERNAME",
                                        "value": "${USERNAME}"
                                    },
                                    {
                                        "name": "PASSWORD",
                                        "value": "${PASSWORD}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INFINISPAN_CONNECTORS",
                                        "value": "${INFINISPAN_CONNECTORS}"
                                    },
                                    {
                                        "name": "CACHE_NAMES",
                                        "value": "fred,barney,mary"
                                    },
                                    {
                                        "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
                                        "value": "${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"
                                    },
                                    {
                                        "name": "HOTROD_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-hotrod"
                                    },
                                    {
                                        "name": "MEMCACHED_CACHE",
                                        "value": "${MEMCACHED_CACHE}"
                                    },
                                    {
                                        "name": "REST_SECURITY_DOMAIN",
                                        "value": "${REST_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_EVICTION_MAX_ENTRIES",
                                        "value": "8000"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_EVICTION_STRATEGY",
                                        "value": "FIFO"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_EXPIRATION_INTERVAL",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_EXPIRATION_LIFESPAN",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_EXPIRATION_MAX_IDLE",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_L1_LIFESPAN",
                                        "value": "1000"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_OWNERS",
                                        "value": "3"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_QUEUE_FLUSH_INTERVAL",
                                        "value": "20"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_QUEUE_SIZE",
                                        "value": "100"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_REMOTE_TIMEOUT",
                                        "value": "25000"
                                    },
                                    {
                                        "name": "BARNEY_CACHE_SEGMENTS",
                                        "value": "50"
                                    },
                                    {
                                        "name": "FRED_CACHE_EVICTION_MAX_ENTRIES",
                                        "value": "8000"
                                    },
                                    {
                                        "name": "FRED_CACHE_EVICTION_STRATEGY",
                                        "value": "FIFO"
                                    },
                                    {
                                        "name": "FRED_CACHE_EXPIRATION_INTERVAL",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "FRED_CACHE_EXPIRATION_LIFESPAN",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "FRED_CACHE_EXPIRATION_MAX_IDLE",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "FRED_CACHE_L1_LIFESPAN",
                                        "value": "1000"
                                    },
                                    {
                                        "name": "FRED_CACHE_OWNERS",
                                        "value": "3"
                                    },
                                    {
                                        "name": "FRED_CACHE_QUEUE_FLUSH_INTERVAL",
                                        "value": "20"
                                    },
                                    {
                                        "name": "FRED_CACHE_QUEUE_SIZE",
                                        "value": "100"
                                    },
                                    {
                                        "name": "FRED_CACHE_REMOTE_TIMEOUT",
                                        "value": "25000"
                                    },
                                    {
                                        "name": "FRED_CACHE_SEGMENTS",
                                        "value": "50"
                                    },
                                    {
                                        "name": "MARY_CACHE_EVICTION_MAX_ENTRIES",
                                        "value": "8000"
                                    },
                                    {
                                        "name": "MARY_CACHE_EVICTION_STRATEGY",
                                        "value": "FIFO"
                                    },
                                    {
                                        "name": "MARY_CACHE_EXPIRATION_INTERVAL",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "MARY_CACHE_EXPIRATION_LIFESPAN",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "MARY_CACHE_EXPIRATION_MAX_IDLE",
                                        "value": "10000"
                                    },
                                    {
                                        "name": "MARY_CACHE_L1_LIFESPAN",
                                        "value": "1000"
                                    },
                                    {
                                        "name": "MARY_CACHE_OWNERS",
                                        "value": "3"
                                    },
                                    {
                                        "name": "MARY_CACHE_QUEUE_FLUSH_INTERVAL",
                                        "value": "20"
                                    },
                                    {
                                        "name": "MARY_CACHE_QUEUE_SIZE",
                                        "value": "100"
                                    },
                                    {
                                        "name": "MARY_CACHE_REMOTE_TIMEOUT",
                                        "value": "25000"
                                    },
                                    {
                                        "name": "MARY_CACHE_SEGMENTS",
                                        "value": "50"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        }
    ]
}
